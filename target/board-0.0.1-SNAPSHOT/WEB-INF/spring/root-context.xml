<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans file:///Library/schema/spring-beans.xsd 
	http://www.springframework.org/schema/context file:///Library/schema/spring-context.xsd 
	http://www.springframework.org/schema/jdbc file:///Library/schema/spring-jdbc.xsd 
	http://www.springframework.org/schema/tx file:///Library/schema/spring-tx.xsd 
	http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">


	<!-- 주로 @Service, @Repository, @Component 붙은 서비스, DAO, 일반 빈을 스캔해서 전역 빈으로 등록 -->
	<context:component-scan base-package="jin.spring.board" />

	<!-- DB 연결용 커넥션 풀로 HikariCP 사용 -->
	<bean class="com.zaxxer.hikari.HikariDataSource"
		id="hikariDataSource" destroy-method="close">
		<!-- log4jdbc: JDBC 드라이버를 감싸서 SQL 로그를 출력해주는 도구 -->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
			
		<!-- DB 접속 주소 (JDBC URL) -->
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:xe" />
			
		<!-- 데이터베이스에 접속할 계정 정보 -->
		<property name="username" value="javaboard" />
		<property name="password" value="1234" />
	</bean>

	<!-- MyBatis 설정 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactoryBean">
		<property name="dataSource" ref="hikariDataSource" />
		<!-- MyBatis 환경 설정 -->
		<property name="configLocation"
			value="classpath:/configuration/config.xml" />
		<!-- 실제 SQL이 작성된 매퍼 -->
		<property name="mapperLocations"
			value="classpath:/mapper/boardMapper.xml" />
	</bean>

	<!-- DAO에서 MyBatis 실행할 때 사용하는 핵심 객체 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 트랜잭션을 관리할 빈 설정 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="hikariDataSource" />
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />
</beans>
